package com.example.spring.jdbc.mvc.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.example.spring.jdbc.mvc.bean.EmployeeBean;

public class EmployeeDAO implements DBOperation{
	
	
	private JdbcTemplate jdbcTemplate;

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}
	
	
	public List<EmployeeBean> retriveAllEmployee(){
		
		List<EmployeeBean> employeeBeansList = (List<EmployeeBean>)jdbcTemplate.query(GET_ALL_EMPLOYEE_DETAILS,new EmployeeRowMapper());
		
		return employeeBeansList;
	}
	private class EmployeeRowMapper implements RowMapper<EmployeeBean>{

		@Override
		public EmployeeBean mapRow(ResultSet resultSet, int position) throws SQLException {
			
			EmployeeBean employeeBean = new EmployeeBean(resultSet.getInt(1),
														 resultSet.getString(2),
														 resultSet.getString(3),
														 resultSet.getFloat(4));
			
			return employeeBean;
		}
		
	}
	
	public List<EmployeeBean> retriveIdNameEmployee(){
		
		List<EmployeeBean>employeeBeansList=(List<EmployeeBean>)jdbcTemplate.query(GET_EMPLOYEE_ID_NAME_DETAILS, new EmployeeRowMapper1());
		
		return employeeBeansList;
	}
	
	private class EmployeeRowMapper1 implements RowMapper<EmployeeBean>{

		@Override
		public EmployeeBean mapRow(ResultSet result, int pos) throws SQLException {
			
			EmployeeBean employeeBeann = new EmployeeBean(result.getInt(1),
														 result.getString(2));
					
					 return employeeBeann;
		}
		
	}

	@Override
	public List<EmployeeBean> retriveJobSalaryEmployee() {
		List<EmployeeBean>employeeBeansList=(List<EmployeeBean>)jdbcTemplate.query(GET_EMPLOYEE_JOB_EMPLOYEE_SALARY_Details, new EmployeeRowMapper2());
		
		return employeeBeansList;
	}
	private class EmployeeRowMapper2 implements RowMapper<EmployeeBean>{

		@Override
		public EmployeeBean mapRow(ResultSet result1, int pos1) throws SQLException {
			
			EmployeeBean employeeBeann = new EmployeeBean(result1.getString(1),
														 result1.getFloat(2));
					
					 return employeeBeann;
		}
	}
	

	@Override
	public List<EmployeeBean> retriveIDJobSalaryEmpoyee() {
		List<EmployeeBean>employeeBeansList=(List<EmployeeBean>)jdbcTemplate.query(GET_EMPLOYEE_ID_JOB_SALARY_DETAILS, new EmployeeRowMapper3());
		
		return employeeBeansList;
	}
	private class EmployeeRowMapper3 implements RowMapper<EmployeeBean>{

		@Override
		public EmployeeBean mapRow(ResultSet result1, int pos1) throws SQLException {
			
			EmployeeBean employeeBeann = new EmployeeBean(result1.getString(1),
														 result1.getFloat(2));
					
					 return employeeBeann;
		}
	}


	@Override
	public List<EmployeeBean> retriveIDSalaryEmpoyee() {
		List<EmployeeBean>employeeBeansList=(List<EmployeeBean>)jdbcTemplate.query(GET_EMPLOYEE_ID_SALARY_DETAILS, new EmployeeRowMapper4());
		
		return employeeBeansList;
	}
	private class EmployeeRowMapper4 implements RowMapper<EmployeeBean>{

		@Override
		public EmployeeBean mapRow(ResultSet result1, int pos1) throws SQLException {
			
			EmployeeBean employeeBeann = new EmployeeBean(result1.getString(1),
														 result1.getFloat(2));
					
					 return employeeBeann;
		}
	}
	
}
